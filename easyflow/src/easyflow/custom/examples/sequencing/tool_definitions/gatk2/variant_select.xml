<?xml version="1.0" encoding="UTF-8"?>
<tool xmlns="urn:de.thiema.easyflow/types"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:de.thiema.easyflow/types Easyflow.xsd"
      id="gatk2_variant_select"
      name="Select Variants"
      version="0.0.7">
  <description>from VCF files</description>
  <requirements>
      <requirement type="package" version="2.3">gatk</requirement>
  </requirements>
  
  
    <param name="input_variant" type="data" format="vcf"
          help="-V,--variant &amp;lt;variant&amp;gt;"
          label="Variant file to select">
      <key type="short">V</key>
      <key type="long">variant</key>
   </param>
   <param name="ref_file" type="data" format="fasta"
          help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;"
          label="Using reference file">
      <key type="short">R</key>
      <key type="long">reference_sequence</key>
   </param>
    
    <param name="select_expressions" type="text"
          help="-select,--select_expressions &amp;lt;select_expressions&amp;gt;"
          label="JEXL expression"
          multiple="true">
      <key type="short">select</key>
      <key type="long">select_expressions</key>
   </param>
    
    <param name="input_concordance" type="data" format="vcf"
          help="-conc,--concordance &amp;lt;concordance&amp;gt;"
          label="Output variants that were also called in this comparison track"
          optional="true">
      <key type="short">conc</key>
      <key type="long">concordance</key>
   </param>
    <param name="input_discordance" type="data" format="vcf"
          help="-disc,--discordance &amp;lt;discordance&amp;gt;"
          label="Output variants that were not called in this comparison track"
          optional="true">
      <key type="short">disc</key>
      <key type="long">discordance</key>
   </param>
    
    <param name="sample_name" type="text" help="-sn,--sample_name &amp;lt;sample_name&amp;gt;"
          label="Include genotypes from this sample"
          multiple="true">
      <key type="short">sn</key>
      <key type="long">sample_name</key>
   </param>
    
    <param name="exclude_sample_name" type="text"
          help="-xl_sn,--exclude_sample_name &amp;lt;exclude_sample_name&amp;gt;"
          label="Exclude genotypes from this sample"
          multiple="true">
      <key type="short">xl_sn</key>
      <key type="long">exclude_sample_name</key>
   </param>
    
    <param name="exclude_filtered" type="boolean" help="-ef,--excludeFiltered"
          label="Don't include filtered loci in the analysis"
          default_value="true">
      <key type="long">excludeFiltered</key>
      <key type="short">ef</key>
   </param>
    
    <conditional name="gatk_param_type">
      <param name="gatk_param_type_selector" type="select"
             label="Basic or Advanced GATK options"/>
      <when value="basic">
        
      </when>
      <when value="advanced">
        <param name="pedigree_file" type="data" format="txt"
                help="-ped,--pedigree &amp;lt;pedigree&amp;gt;"
                label="Pedigree files for samples"
                multiple="true">
            <key type="short">ped</key>
            <key type="long">pedigree</key>
         </param>
        <param name="pedigree_string" type="text"
                help="-pedString,--pedigreeString &amp;lt;pedigreeString&amp;gt;"
                label="Pedigree string for samples"
                multiple="true">
            <key type="short">pedString</key>
            <key type="long">pedigreeString</key>
         </param>
        <param name="pedigree_validation_type" type="select"
                help="-pedValidationType,--pedigreeValidationType &amp;lt;pedigreeValidationType&amp;gt;"
                label="How strict should we be in validating the pedigree information">
            <key type="short">pedValidationType</key>
            <key type="long">pedigreeValidationType</key>
         </param>
        <conditional name="read_filter_type">
              <param name="read_filter_type_selector" type="select"
                   help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                   label="Read Filter Type">
               <key type="short">rf</key>
               <key type="long">read_filter</key>
            </param>
              <when value="BadCigar">
                  
              </when>
              <when value="BadMate">
                  
              </when>
              <when value="DuplicateRead">
                  
              </when>
              <when value="FailsVendorQualityCheck">
                  
              </when>
              <when value="MalformedRead">
                  <param name="filter_mismatching_base_and_quals" type="boolean"
                      help="filter out the mismatch reads instead of quitting with an error"
                      label="filter out the reads with mismatching number of bases and base qualities"
                      default_value="true">
                  <key type="long">filter_mismatching_base_and_quals</key>
                  <key>filter</key>
               </param>
              </when>
              <when value="MappingQuality">
                  <param name="min_mapping_quality_score" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Minimum read mapping quality required to consider a read for calling">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="MappingQualityUnavailable">
                  
              </when>
              <when value="MappingQualityZero">
                  
              </when>
              <when value="MateSameStrand">
                  
              </when>
              <when value="MaxInsertSize">
                  <param name="maxInsertSize" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Discard reads with insert size greater than the specified value">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="MaxReadLength">
                  <param name="maxReadLength" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Max Read Length">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="MissingReadGroup">
                  
              </when>
              <when value="NoOriginalQualityScores">
                  
              </when>
              <when value="NotPrimaryAlignment">
                  
              </when>
              <when value="Platform454">
                  
              </when>
              <when value="Platform">
                  <param name="PLFilterName" type="text" help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Discard reads with RG:PL attribute containing this string">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="PlatformUnit">
                  
              </when>
              <when value="ReadGroupBlackList">
                  
              </when>
              <when value="ReadName">
                  <param name="readName" type="text" help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Filter out all reads except those with this read name">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="ReadStrand">
                  <param name="filterPositive" type="boolean"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Discard reads on the forward strand"
                      default_value="true">
                  <key type="long">filterPositive</key>
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="ReassignMappingQuality">
                  <param name="default_mapping_quality" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Default read mapping quality to assign to all reads">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="Sample">
                  <param name="sample_to_keep" type="text" help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="The name of the sample(s) to keep, filtering out all others">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="SingleReadGroup">
                  <param name="read_group_to_keep" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="The name of the read group to keep, filtering out all others">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="UnmappedRead">
                  
              </when>
            </conditional>
        <param name="input_intervals" type="data"
                format="bed,gatk_interval,picard_interval_list,vcf"
                help="-L,--intervals &amp;lt;intervals&amp;gt;"
                label="Genomic intervals"
                multiple="true">
            <key type="short">L</key>
            <key type="long">intervals</key>
         </param>
        <param name="input_exclude_intervals" type="data"
                format="bed,gatk_interval,picard_interval_list,vcf"
                help="-XL,--excludeIntervals &amp;lt;excludeIntervals&amp;gt;"
                label="Genomic intervals"
                multiple="true">
            <key type="short">XL</key>
            <key type="long">excludeIntervals</key>
         </param>
        
        <param name="interval_set_rule" type="select"
                help="-isr,--interval_set_rule &amp;lt;interval_set_rule&amp;gt;"
                label="Interval set rule">
            <key type="short">isr</key>
            <key type="long">interval_set_rule</key>
         </param>
        
        <conditional name="downsampling_type">
            <param name="downsampling_type_selector" type="select"
                   help="-dt,--downsampling_type &amp;lt;downsampling_type&amp;gt;"
                   label="Type of reads downsampling to employ at a given locus">
               <key type="short">dt</key>
               <key type="long">downsampling_type</key>
            </param>
            <when value="NONE">
              
          </when>
            <when value="ALL_READS">
              <conditional name="downsample_to_type">
                  <param name="downsample_to_type_selector" type="select" label="Downsample method"/>
                  <when value="downsample_to_fraction">
                      <param name="downsample_to_value" type="float"
                            help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;"
                            label="Fraction [0.0-1.0] of reads to downsample to">
                        <key type="short">dfrac</key>
                        <key type="long">downsample_to_fraction</key>
                     </param>
                  </when>
                  <when value="downsample_to_coverage">
                      <param name="downsample_to_value" type="integer"
                            help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;"
                            label="Coverage to downsample to at any given locus">
                        <key type="short">dcov</key>
                        <key type="long">downsample_to_coverage</key>
                     </param>
                  </when>
              </conditional>
            </when>
            <when value="BY_SAMPLE">
              <conditional name="downsample_to_type">
                  <param name="downsample_to_type_selector" type="select" label="Downsample method"/>
                  <when value="downsample_to_fraction">
                      <param name="downsample_to_value" type="float"
                            help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;"
                            label="Fraction [0.0-1.0] of reads to downsample to">
                        <key type="short">dfrac</key>
                        <key type="long">downsample_to_fraction</key>
                     </param>
                  </when>
                  <when value="downsample_to_coverage">
                      <param name="downsample_to_value" type="integer"
                            help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;"
                            label="Coverage to downsample to at any given locus">
                        <key type="short">dcov</key>
                        <key type="long">downsample_to_coverage</key>
                     </param>
                  </when>
              </conditional>
            </when>
        </conditional>
        <param name="baq" type="select" help="-baq,--baq &amp;lt;baq&amp;gt;"
                label="Type of BAQ calculation to apply in the engine">
            <key type="short">baq</key>
            <key type="long">baq</key>
         </param>
        <param name="baq_gap_open_penalty" type="float"
                help="Default value is 40. 30 is perhaps better for whole genome call sets. -baqGOP,--baqGapOpenPenalty &amp;lt;baqGapOpenPenalty&amp;gt;"
                label="BAQ gap open penalty (Phred Scaled)">
            <key>Default</key>
         </param>
        <param name="use_original_qualities" type="boolean" help="-OQ,--useOriginalQualities"
                label="Use the original base quality scores from the OQ tag"
                default_value="true">
            <key type="long">useOriginalQualities</key>
            <key type="short">OQ</key>
         </param>
        <param name="default_base_qualities" type="integer"
                help="-DBQ,--defaultBaseQualities &amp;lt;defaultBaseQualities&amp;gt;"
                label="Value to be used for all base quality scores, when some are missing">
            <key type="short">DBQ</key>
            <key type="long">defaultBaseQualities</key>
         </param>
        <param name="validation_strictness" type="select"
                help="-S,--validation_strictness &amp;lt;validation_strictness&amp;gt;"
                label="How strict should we be with validation">
            <key type="short">S</key>
            <key type="long">validation_strictness</key>
         </param>
        <param name="interval_merging" type="select"
                help="-im,--interval_merging &amp;lt;interval_merging&amp;gt;"
                label="Interval merging rule">
            <key type="short">im</key>
            <key type="long">interval_merging</key>
         </param>
        
        <conditional name="read_group_black_list_type">
            <param name="read_group_black_list_type_selector" type="select"
                   help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;"
                   label="Type of reads read group black list">
               <key type="short">rgbl</key>
               <key type="long">read_group_black_list</key>
            </param>
            <when value="file">
              <param name="read_group_black_list" type="data" format="txt"
                      help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;"
                      label="Read group black list file">
                  <key type="short">rgbl</key>
                  <key type="long">read_group_black_list</key>
               </param>
            </when>
            <when value="text">
              <param name="read_group_black_list" type="text"
                      help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;"
                      label="Read group black list tag:string">
                  <key type="short">rgbl</key>
                  <key type="long">read_group_black_list</key>
               </param>
            </when>
          </conditional>
        
        <param name="disable_experimental_low_memory_sharding" type="boolean"
                help="--disable_experimental_low_memory_sharding"
                label="Disable experimental low-memory sharding functionality."
                default_value="true">
            <key type="long">disable_experimental_low_memory_sharding</key>
         </param>
        <param name="non_deterministic_random_seed" type="boolean"
                help="-ndrs,--nonDeterministicRandomSeed"
                label="Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run"
                default_value="true">
            <key type="long">nonDeterministicRandomSeed</key>
            <key type="short">ndrs</key>
         </param>
        <param name="fix_misencoded_quality_scores" type="boolean"
                help="-fixMisencodedQuals / --fix_misencoded_quality_scores"
                label="Fix mis-encoded base quality scores. Q0 == ASCII 33 according to the SAM specification, whereas Illumina encoding starts at Q64. The idea here is simple: we just iterate over all reads and subtract 31 from every quality score."
                default_value="true">
            <key type="long">fix_misencoded_quality_scores</key>
            <key type="short">fixMisencodedQuals</key>
         </param>
        
      </when>
    </conditional>
    
    
    <conditional name="analysis_param_type">
      <param name="analysis_param_type_selector" type="select"
             label="Basic or Advanced Analysis options"/>
      <when value="basic">
        
      </when>
      <when value="advanced">
        
        <param name="exclude_sample_file" type="data" format="txt"
                help="-xl_sf,--exclude_sample_file &amp;lt;exclude_sample_file&amp;gt;"
                label="File containing a list of samples (one per line) to exclude"
                multiple="true">
            <key type="short">xl_sf</key>
            <key type="long">exclude_sample_file</key>
         </param>
        
        <param name="sample_file" type="data" format="txt"
                help="-sf,--sample_file &amp;lt;sample_file&amp;gt;"
                label="File containing a list of samples (one per line) to include"
                multiple="true">
            <key type="short">sf</key>
            <key type="long">sample_file</key>
         </param>
        
        <param name="input_keep_ids" type="data" format="text"
                help="-IDs,--keepIDs &amp;lt;keepIDs&amp;gt;"
                label="Only emit sites whose ID is found in this file"
                optional="true">
            <key type="short">IDs</key>
            <key type="long">keepIDs</key>
         </param>
        
        <param name="keep_original_AC" type="boolean" help="-keepOriginalAC,--keepOriginalAC"
                label="Don't update the AC, AF, or AN values in the INFO field after selecting"
                default_value="true">
            <key type="long">keepOriginalAC</key>
            <key type="short">keepOriginalAC</key>
         </param>
        
        <param name="mendelian_violation" type="boolean" help="-mv,--mendelianViolation"
                label="output mendelian violation sites only"
                default_value="true">
            <key type="long">mendelianViolation</key>
            <key type="short">mv</key>
         </param>
        
        <param name="mendelian_violation_qual_threshold" type="float"
                help="-mvq,--mendelianViolationQualThreshold &amp;lt;mendelianViolationQualThreshold&amp;gt;"
                label="Minimum genotype QUAL score for each trio member required to accept a site as a mendelian violation">
            <key type="short">mvq</key>
            <key type="long">mendelianViolationQualThreshold</key>
         </param>
        
        <param name="remove_fraction_genotypes" type="float"
                help="-fractionGenotypes,--remove_fraction_genotypes &amp;lt;remove_fraction_genotypes&amp;gt;"
                label="Selects a fraction (a number between 0 and 1) of the total genotypes at random from the variant track and sets them to nocall">
            <key type="short">fractionGenotypes</key>
            <key type="long">remove_fraction_genotypes</key>
         </param>
        
        <param name="restrict_alleles_to" type="select"
                help="-restrictAllelesTo,--restrictAllelesTo &amp;lt;restrictAllelesTo&amp;gt;"
                label="Select only variants of a particular allelicity">
            <key type="short">restrictAllelesTo</key>
            <key type="long">restrictAllelesTo</key>
         </param>
        
        <param name="sample_expressions" type="text"
                help="-se,--sample_expressions &amp;lt;sample_expressions&amp;gt;"
                label="Regular expression"
                multiple="true">
            <key type="short">se</key>
            <key type="long">sample_expressions</key>
         </param>
        
        <conditional name="select_random_type">
            <param name="select_random_type_selector" type="select"
                   label="Select a random subset of variants"/>
            <when value="select_all">
            
          </when>
            <when value="select_random_fraction">
               <param name="select_random_fraction" type="float"
                      help="-fraction,--select_random_fraction &amp;lt;select_random_fraction&amp;gt;"
                      label="Fraction">
                  <key type="short">fraction</key>
                  <key type="long">select_random_fraction</key>
               </param>
            </when>
            <when value="select_random_number">
               <param name="select_random_number" type="integer"
                      help="-number,--select_random_number &amp;lt;select_random_number&amp;gt;"
                      label="Count">
                  <key type="short">number</key>
                  <key type="long">select_random_number</key>
               </param>
            </when>
        </conditional>
        
        <param name="exclude_non_variants" type="boolean" help="-env,--excludeNonVariants"
                label="Don't include loci found to be non-variant after the subsetting procedure"
                default_value="true">
            <key type="long">excludeNonVariants</key>
            <key type="short">env</key>
         </param>
        
        <param name="select_type_to_include" type="select"
                help="-selectType,--selectTypeToInclude &amp;lt;selectTypeToInclude&amp;gt;"
                label="Select only a certain type of variants from the input file">
            <key type="short">selectType</key>
            <key type="long">selectTypeToInclude</key>
         </param>
        
      </when>
    </conditional>
    
  
  
    <param name="output_vcf" type="data" format="vcf"
          label="${tool.name} on ${on_string} (Variant File)"
          output="true"/>
    <param name="output_log" type="data" format="txt"
          label="${tool.name} on ${on_string} (log)"
          output="true"/>
  
    <data name="output_vcf" format="vcf"
         label="${tool.name} on ${on_string} (Variant File)"/>
    <data name="output_log" format="txt" label="${tool.name} on ${on_string} (log)"/>
  
  
  
</tool>