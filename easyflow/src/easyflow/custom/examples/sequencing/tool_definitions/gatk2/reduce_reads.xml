<?xml version="1.0" encoding="UTF-8"?>
<tool xmlns="urn:de.thiema.easyflow/types"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:de.thiema.easyflow/types Easyflow.xsd"
      id="gatk2_reduce_reads"
      name="Reduce Reads"
      version="0.0.7">
  <description>in BAM files</description>
  <requirements>
      <requirement type="package" version="2.3">gatk</requirement>
      <requirement type="package" version="0.1.18">samtools</requirement>
  </requirements>
  
  
    <param name="input_recal" type="data" format="csv"
          help="-BQSR,--BQSR &amp;lt;recal_file&amp;gt;"
          label="Covariates table recalibration file"
          optional="true">
      <key type="short">BQSR</key>
      <key type="long">BQSR</key>
   </param>
    <param name="input_bam" type="data" format="bam"
          help="-I,--input_file &amp;lt;input_file&amp;gt;"
          label="BAM file">
      <key type="short">I</key>
      <key type="long">input_file</key>
   </param>
   <param name="ref_file" type="data" format="fasta"
          help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;"
          label="Using reference file">
      <key type="short">R</key>
      <key type="long">reference_sequence</key>
   </param>
    
    <conditional name="gatk_param_type">
      <param name="gatk_param_type_selector" type="select"
             label="Basic or Advanced GATK options"/>
      <when value="basic">
        
      </when>
      <when value="advanced">
        <param name="pedigree_file" type="data" format="txt"
                help="-ped,--pedigree &amp;lt;pedigree&amp;gt;"
                label="Pedigree files for samples"
                multiple="true"/>
        <param name="pedigree_string" type="text"
                help="-pedString,--pedigreeString &amp;lt;pedigreeString&amp;gt;"
                label="Pedigree string for samples"
                multiple="true"/>
        <param name="pedigree_validation_type" type="select"
                help="-pedValidationType,--pedigreeValidationType &amp;lt;pedigreeValidationType&amp;gt;"
                label="How strict should we be in validating the pedigree information">
            <key type="short">pedValidationType</key>
            <key type="long">pedigreeValidationType</key>
         </param>
        <conditional name="read_filter_type">
              <param name="read_filter_type_selector" type="select" label="Read Filter Type"/>
              <when value="BadCigar">
                  
              </when>
              <when value="BadMate">
                  
              </when>
              <when value="DuplicateRead">
                  
              </when>
              <when value="FailsVendorQualityCheck">
                  
              </when>
              <when value="MalformedRead">
                  <param name="filter_mismatching_base_and_quals" type="boolean"
                      help="filter out the mismatch reads instead of quitting with an error"
                      label="filter out the reads with mismatching number of bases and base qualities"
                      defaultValue="true">
                  <key type="long">filter_mismatching_base_and_quals</key>
                  <key>filter</key>
               </param>
              </when>
              <when value="MappingQuality">
                  <param name="min_mapping_quality_score" type="integer"
                      label="Minimum read mapping quality required to consider a read for calling"/>
              </when>
              <when value="MappingQualityUnavailable">
                  
              </when>
              <when value="MappingQualityZero">
                  
              </when>
              <when value="MateSameStrand">
                  
              </when>
              <when value="MaxInsertSize">
                  <param name="maxInsertSize" type="integer"
                      label="Discard reads with insert size greater than the specified value"/>
              </when>
              <when value="MaxReadLength">
                  <param name="maxReadLength" type="integer" label="Max Read Length"/>
              </when>
              <when value="MissingReadGroup">
                  
              </when>
              <when value="NoOriginalQualityScores">
                  
              </when>
              <when value="NotPrimaryAlignment">
                  
              </when>
              <when value="Platform454">
                  
              </when>
              <when value="Platform">
                  <param name="PLFilterName" type="text"
                      label="Discard reads with RG:PL attribute containing this string"/>
              </when>
              <when value="PlatformUnit">
                  
              </when>
              <when value="ReadGroupBlackList">
                  
              </when>
              <when value="ReadName">
                  <param name="readName" type="text"
                      label="Filter out all reads except those with this read name"/>
              </when>
              <when value="ReadStrand">
                  <param name="filterPositive" type="boolean"
                      label="Discard reads on the forward strand"
                      defaultValue="true">
                  <key type="long">filterPositive</key>
               </param>
              </when>
              <when value="ReassignMappingQuality">
                  <param name="default_mapping_quality" type="integer"
                      label="Default read mapping quality to assign to all reads"/>
              </when>
              <when value="Sample">
                  <param name="sample_to_keep" type="text"
                      label="The name of the sample(s) to keep, filtering out all others"/>
              </when>
              <when value="SingleReadGroup">
                  <param name="read_group_to_keep" type="integer"
                      label="The name of the read group to keep, filtering out all others"/>
              </when>
              <when value="UnmappedRead">
                  
              </when>
            </conditional>
        <param name="input_intervals" type="data"
                format="bed,gatk_interval,picard_interval_list,vcf"
                help="-L,--intervals &amp;lt;intervals&amp;gt;"
                label="Genomic intervals"
                multiple="true"/>
        <param name="input_exclude_intervals" type="data"
                format="bed,gatk_interval,picard_interval_list,vcf"
                help="-XL,--excludeIntervals &amp;lt;excludeIntervals&amp;gt;"
                label="Genomic intervals"
                multiple="true"/>
        
        <param name="interval_set_rule" type="select"
                help="-isr,--interval_set_rule &amp;lt;interval_set_rule&amp;gt;"
                label="Interval set rule">
            <key type="short">isr</key>
            <key type="long">interval_set_rule</key>
         </param>
        
        <conditional name="downsampling_type">
            <param name="downsampling_type_selector" type="select"
                   help="-dt,--downsampling_type &amp;lt;downsampling_type&amp;gt;"
                   label="Type of reads downsampling to employ at a given locus">
               <key type="short">dt</key>
               <key type="long">downsampling_type</key>
            </param>
            <when value="NONE">
              
          </when>
            <when value="ALL_READS">
              <conditional name="downsample_to_type">
                  <param name="downsample_to_type_selector" type="select" label="Downsample method"/>
                  <when value="downsample_to_fraction">
                      <param name="downsample_to_value" type="float"
                            help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;"
                            label="Fraction [0.0-1.0] of reads to downsample to">
                        <key type="short">dfrac</key>
                        <key type="long">downsample_to_fraction</key>
                     </param>
                  </when>
                  <when value="downsample_to_coverage">
                      <param name="downsample_to_value" type="integer"
                            help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;"
                            label="Coverage to downsample to at any given locus">
                        <key type="short">dcov</key>
                        <key type="long">downsample_to_coverage</key>
                     </param>
                  </when>
              </conditional>
            </when>
            <when value="BY_SAMPLE">
              <conditional name="downsample_to_type">
                  <param name="downsample_to_type_selector" type="select" label="Downsample method"/>
                  <when value="downsample_to_fraction">
                      <param name="downsample_to_value" type="float"
                            help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;"
                            label="Fraction [0.0-1.0] of reads to downsample to">
                        <key type="short">dfrac</key>
                        <key type="long">downsample_to_fraction</key>
                     </param>
                  </when>
                  <when value="downsample_to_coverage">
                      <param name="downsample_to_value" type="integer"
                            help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;"
                            label="Coverage to downsample to at any given locus">
                        <key type="short">dcov</key>
                        <key type="long">downsample_to_coverage</key>
                     </param>
                  </when>
              </conditional>
            </when>
        </conditional>
        <param name="baq" type="select" help="-baq,--baq &amp;lt;baq&amp;gt;"
                label="Type of BAQ calculation to apply in the engine">
            <key type="short">baq</key>
            <key type="long">baq</key>
         </param>
        <param name="baq_gap_open_penalty" type="float"
                help="Default value is 40. 30 is perhaps better for whole genome call sets. -baqGOP,--baqGapOpenPenalty &amp;lt;baqGapOpenPenalty&amp;gt;"
                label="BAQ gap open penalty (Phred Scaled)">
            <key>Default</key>
         </param>
        <param name="use_original_qualities" type="boolean" help="-OQ,--useOriginalQualities"
                label="Use the original base quality scores from the OQ tag"
                defaultValue="true">
            <key type="long">useOriginalQualities</key>
            <key type="short">OQ</key>
         </param>
        <param name="default_base_qualities" type="integer"
                help="-DBQ,--defaultBaseQualities &amp;lt;defaultBaseQualities&amp;gt;"
                label="Value to be used for all base quality scores, when some are missing">
            <key type="short">DBQ</key>
            <key type="long">defaultBaseQualities</key>
         </param>
        <param name="validation_strictness" type="select"
                help="-S,--validation_strictness &amp;lt;validation_strictness&amp;gt;"
                label="How strict should we be with validation">
            <key type="short">S</key>
            <key type="long">validation_strictness</key>
         </param>
        <param name="interval_merging" type="select"
                help="-im,--interval_merging &amp;lt;interval_merging&amp;gt;"
                label="Interval merging rule">
            <key type="short">im</key>
            <key type="long">interval_merging</key>
         </param>
        
        <conditional name="read_group_black_list_type">
            <param name="read_group_black_list_type_selector" type="select"
                   label="Type of reads read group black list"/>
            <when value="file">
              <param name="read_group_black_list" type="data" format="txt"
                      label="Read group black list file"/>
            </when>
            <when value="text">
              <param name="read_group_black_list" type="text"
                      label="Read group black list tag:string"/>
            </when>
          </conditional>
        
        <param name="disable_experimental_low_memory_sharding" type="boolean"
                help="--disable_experimental_low_memory_sharding"
                label="Disable experimental low-memory sharding functionality."
                defaultValue="true">
            <key type="long">disable_experimental_low_memory_sharding</key>
         </param>
        <param name="non_deterministic_random_seed" type="boolean"
                help="-ndrs,--nonDeterministicRandomSeed"
                label="Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run"
                defaultValue="true">
            <key type="long">nonDeterministicRandomSeed</key>
            <key type="short">ndrs</key>
         </param>
        <param name="fix_misencoded_quality_scores" type="boolean"
                help="-fixMisencodedQuals / --fix_misencoded_quality_scores"
                label="Fix mis-encoded base quality scores. Q0 == ASCII 33 according to the SAM specification, whereas Illumina encoding starts at Q64. The idea here is simple: we just iterate over all reads and subtract 31 from every quality score."
                defaultValue="true">
            <key type="long">fix_misencoded_quality_scores</key>
            <key type="short">fixMisencodedQuals</key>
         </param>
        
      </when>
    </conditional>
    
    <conditional name="analysis_param_type">
      <param name="analysis_param_type_selector" type="select"
             label="Basic or Advanced Analysis options"/>
      <when value="basic">
        
      </when>
      <when value="advanced">
        <param name="allow_polyploid_reduction" type="boolean"
                help="--allow_polyploid_reduction / -polyploid Allow the experimental polyploid-based reduction capabilities"
                label="Allow polyploid-based reduction"
                defaultValue="true">
            <key type="short">polyploid</key>
            <key type="long">allow_polyploid_reduction</key>
         </param>
        <param name="context_size" type="integer"
                help="The number of bases to keep around mismatches (potential variation)"
                label="context_size"
                optional="true">
            <key>The</key>
         </param>
        <param name="dont_compress_read_names" type="boolean"
                help="--dont_compress_read_names / -nocmp_names  By default, ReduceReads will compress read names to numbers and guarantee uniqueness and reads with similar name will still have similar compressed names. Note: If you scatter/gather there is no guarantee that read name uniqueness will be maintained -- in this case we recommend not compressing."
                label="Do not compress read names."
                defaultValue="true">
            <key type="short">nocmp_names</key>
            <key type="long">dont_compress_read_names</key>
         </param>
        <param name="dont_hardclip_low_qual_tails" type="boolean"
                help="--dont_hardclip_low_qual_tails / -noclip_tail This option overrides the argument of minimum tail quality"
                label="Do not hard clip the low quality tails of the reads"
                defaultValue="true">
            <key type="short">noclip_tail</key>
            <key type="long">dont_hardclip_low_qual_tails</key>
         </param>

        <param name="dont_simplify_reads" type="boolean"
                help="--dont_simplify_reads / -nosimplify Do not simplify read (strip away all extra information of the read -- anything other than bases, quals and read group)."
                label="Do not simplify read"
                defaultValue="true">
            <key type="short">nosimplify</key>
            <key type="long">dont_simplify_reads</key>
         </param>
        <param name="dont_use_softclipped_bases" type="boolean"
                help="--dont_use_softclipped_bases / -no_soft  Do not use high quality soft-clipped bases. By default, ReduceReads will hard clip away any low quality soft clipped base left by the aligner and use the high quality soft clipped bases in it's traversal algorithm to identify variant regions. The minimum quality for soft clipped bases is the same as the minimum base quality to consider (minqual)"
                label="Do not use high quality soft-clipped bases"
                defaultValue="true">
            <key type="short">no_soft</key>
            <key type="long">dont_use_softclipped_bases</key>
         </param>
        <param name="downsample_coverage" type="integer"
                help="Downsamples the coverage of a variable region approximately (guarantees the minimum to be equal to this). A value of 0 turns downsampling off."
                label="Downsample the coverage of a variable region"
                optional="true">
            <key>Downsamples</key>
         </param>
        <param name="hard_clip_to_interval" type="boolean"
                help="--hard_clip_to_interval / -clip_int  Optionally hard clip all incoming reads to the desired intervals. The hard clips will happen exactly at the interval border."
                label="Hard clip all incoming reads"
                defaultValue="true">
            <key type="short">clip_int</key>
            <key type="long">hard_clip_to_interval</key>
         </param>
        <param name="minimum_del_proportion_to_trigger_variant" type="float"
                help="--minimum_del_proportion_to_trigger_variant / -mindel   Minimum proportion of indels in a site to trigger a variant region. Anything below this will be considered consensus.  "
                label="Minimum proportion of indels in a site to trigger a variant region"
                optional="true">
            <key type="long">minimum_del_proportion_to_trigger_variant</key>
         </param>
        <param name="minimum_mapping_quality" type="integer"
                help="--minimum_mapping_quality / -minmap  The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions."
                label="Minimum mapping quality for consensus read"
                optional="true">
            <key type="long">minimum_mapping_quality</key>
         </param>
        <param name="minimum_tail_qualities" type="integer"
                help="--minimum_tail_qualities / -mintail  Reads have notoriously low quality bases on the tails (left and right). Consecutive bases with quality lower than this threshold will be hard clipped off before entering the reduce reads algorithm."
                label="Minimum tail quality"
                optional="true">
            <key type="long">minimum_tail_qualities</key>
         </param>
        <param name="minimum_base_quality_to_consider" type="integer"
                help="--minimum_mapping_quality / -minmap  The minimum mapping quality to be considered for the consensus synthetic read. Reads that have mapping quality below this threshold will not be counted towards consensus, but are still counted towards variable regions."
                label="Minimum mapping quality for consensus read"
                optional="true">
            <key type="long">minimum_mapping_quality</key>
         </param>
        <param name="minimum_alt_proportion_to_trigger_variant" type="float"
                help="--minimum_alt_proportion_to_trigger_variant / -minvar  Minimum proportion of mismatches in a site to trigger a variant region. Anything below this will be considered consensus."
                label="Minimum proportion of mismatches in a site to trigger a variant region"
                optional="true">
            <key type="long">minimum_alt_proportion_to_trigger_variant</key>
         </param>
        <param name="dont_hardclip_adaptor_sequences" type="boolean"
                help="--dont_hardclip_adaptor_sequences / -noclip_ad  Do not hard clip adaptor sequences. Note: You don't have to turn this on for reads that are not mate paired. The program will behave correctly in those cases."
                label="Do not hard clip adaptor sequences"
                defaultValue="true">
            <key type="short">noclip_ad</key>
            <key type="long">dont_hardclip_adaptor_sequences</key>
         </param>
      </when>
    </conditional>
  
  
    <param name="output_bam" type="data" format="bam"
          label="${tool.name} on ${on_string} (BAM)"
          output="true"/>
    <param name="output_log" type="data" format="txt"
          label="${tool.name} on ${on_string} (log)"
          output="true"/>
  
    <data name="output_bam" format="bam" label="${tool.name} on ${on_string} (BAM)"/>
    <data name="output_log" format="txt" label="${tool.name} on ${on_string} (log)"/>
  
  
  
</tool>