<?xml version="1.0" encoding="UTF-8"?>
<tool xmlns="urn:de.thiema.easyflow/types"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:de.thiema.easyflow/types Easyflow.xsd"
      package="gatk"
      id="gatk2_unified_genotyper"
      name="Unified Genotyper"
      version="0.0.7">
  <description>SNP and indel caller</description>
  <requirements>
      <requirement type="package" version="2.3">gatk</requirement>
      <requirement type="package" version="0.1.18">samtools</requirement>
  </requirements>
  
  
    <param name="input_bam" type="data" format="bam"
          help="-I,--input_file &amp;lt;input_file&amp;gt;"
          label="BAM file"
          multiple="true"
          min_occur="1">
      <key type="short">I</key>
      <key type="long">input_file</key>
   </param>
   <param name="ref_file" type="data" format="fasta"
          help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;"
          label="Using reference file">
      <key type="short">R</key>
      <key type="long">reference_sequence</key>
   </param>
    
    <conditional name="rod_bind_type">
          <param name="rod_bind_type_selector" type="select" help="-D,--dbsnp &amp;lt;dbsnp&amp;gt;"
             label="Binding Type">
         <key type="short">D</key>
         <key type="long">dbsnp</key>
      </param>
          <when value="dbsnp">
              <param name="input_rod" type="data" format="vcf" help="-D,--dbsnp &amp;lt;dbsnp&amp;gt;"
                label="ROD file">
            <key type="short">D</key>
            <key type="long">dbsnp</key>
         </param>
          </when>
          <when value="snps">
              <param name="input_rod" type="data" format="vcf" help="-D,--dbsnp &amp;lt;dbsnp&amp;gt;"
                label="ROD file">
            <key type="short">D</key>
            <key type="long">dbsnp</key>
         </param>
          </when>
          <when value="indels">
              <param name="input_rod" type="data" format="vcf" help="-D,--dbsnp &amp;lt;dbsnp&amp;gt;"
                label="ROD file">
            <key type="short">D</key>
            <key type="long">dbsnp</key>
         </param>
          </when>
          <when value="custom">
              <param name="custom_rod_name" type="text" help="-D,--dbsnp &amp;lt;dbsnp&amp;gt;"
                label="ROD Name">
            <key type="short">D</key>
            <key type="long">dbsnp</key>
         </param>
              <param name="input_rod" type="data" format="vcf" help="-D,--dbsnp &amp;lt;dbsnp&amp;gt;"
                label="ROD file">
            <key type="short">D</key>
            <key type="long">dbsnp</key>
         </param>
          </when>
        </conditional>
    
    <param name="genotype_likelihoods_model" type="select"
          help="-glm,--genotype_likelihoods_model &amp;lt;genotype_likelihoods_model&amp;gt;"
          label="Genotype likelihoods calculation model to employ">
      <key type="short">glm</key>
      <key type="long">genotype_likelihoods_model</key>
   </param>
    
    <param name="standard_min_confidence_threshold_for_calling" type="float"
          help="-stand_call_conf,--standard_min_confidence_threshold_for_calling &amp;lt;standard_min_confidence_threshold_for_calling&amp;gt;"
          label="The minimum phred-scaled confidence threshold at which variants not at 'trigger' track sites should be called">
      <key type="short">stand_call_conf</key>
      <key type="long">standard_min_confidence_threshold_for_calling</key>
   </param>
    <param name="standard_min_confidence_threshold_for_emitting" type="float"
          help="-stand_emit_conf,--standard_min_confidence_threshold_for_emitting &amp;lt;standard_min_confidence_threshold_for_emitting&amp;gt;"
          label="The minimum phred-scaled confidence threshold at which variants not at 'trigger' track sites should be emitted (and filtered if less than the calling threshold)">
      <key type="short">stand_emit_conf</key>
      <key type="long">standard_min_confidence_threshold_for_emitting</key>
   </param>

    
    <conditional name="gatk_param_type">
      <param name="gatk_param_type_selector" type="select"
             label="Basic or Advanced GATK options"/>
      <when value="basic">
        
      </when>
      <when value="advanced">
        <param name="pedigree_file" type="data" format="txt"
                help="-ped,--pedigree &amp;lt;pedigree&amp;gt;"
                label="Pedigree files for samples"
                multiple="true">
            <key type="short">ped</key>
            <key type="long">pedigree</key>
         </param>
        <param name="pedigree_string" type="text"
                help="-pedString,--pedigreeString &amp;lt;pedigreeString&amp;gt;"
                label="Pedigree string for samples"
                multiple="true">
            <key type="short">pedString</key>
            <key type="long">pedigreeString</key>
         </param>
        <param name="pedigree_validation_type" type="select"
                help="-pedValidationType,--pedigreeValidationType &amp;lt;pedigreeValidationType&amp;gt;"
                label="How strict should we be in validating the pedigree information">
            <key type="short">pedValidationType</key>
            <key type="long">pedigreeValidationType</key>
         </param>
        <conditional name="read_filter_type">
              <param name="read_filter_type_selector" type="select"
                   help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                   label="Read Filter Type">
               <key type="short">rf</key>
               <key type="long">read_filter</key>
            </param>
              <when value="BadCigar">
                  
              </when>
              <when value="BadMate">
                  
              </when>
              <when value="DuplicateRead">
                  
              </when>
              <when value="FailsVendorQualityCheck">
                  
              </when>
              <when value="MalformedRead">
                  <param name="filter_mismatching_base_and_quals" type="boolean"
                      help="filter out the mismatch reads instead of quitting with an error"
                      label="filter out the reads with mismatching number of bases and base qualities"
                      default_value="true">
                  <key type="long">filter_mismatching_base_and_quals</key>
                  <key>filter</key>
               </param>
              </when>
              <when value="MappingQuality">
                  <param name="min_mapping_quality_score" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Minimum read mapping quality required to consider a read for calling">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="MappingQualityUnavailable">
                  
              </when>
              <when value="MappingQualityZero">
                  
              </when>
              <when value="MateSameStrand">
                  
              </when>
              <when value="MaxInsertSize">
                  <param name="maxInsertSize" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Discard reads with insert size greater than the specified value">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="MaxReadLength">
                  <param name="maxReadLength" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Max Read Length">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="MissingReadGroup">
                  
              </when>
              <when value="NoOriginalQualityScores">
                  
              </when>
              <when value="NotPrimaryAlignment">
                  
              </when>
              <when value="Platform454">
                  
              </when>
              <when value="Platform">
                  <param name="PLFilterName" type="text" help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Discard reads with RG:PL attribute containing this string">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="PlatformUnit">
                  
              </when>
              <when value="ReadGroupBlackList">
                  
              </when>
              <when value="ReadName">
                  <param name="readName" type="text" help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Filter out all reads except those with this read name">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="ReadStrand">
                  <param name="filterPositive" type="boolean"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Discard reads on the forward strand"
                      default_value="true">
                  <key type="long">filterPositive</key>
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="ReassignMappingQuality">
                  <param name="default_mapping_quality" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="Default read mapping quality to assign to all reads">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="Sample">
                  <param name="sample_to_keep" type="text" help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="The name of the sample(s) to keep, filtering out all others">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="SingleReadGroup">
                  <param name="read_group_to_keep" type="integer"
                      help="-rf,--read_filter &amp;lt;read_filter&amp;gt;"
                      label="The name of the read group to keep, filtering out all others">
                  <key type="short">rf</key>
                  <key type="long">read_filter</key>
               </param>
              </when>
              <when value="UnmappedRead">
                  
              </when>
            </conditional>
        <param name="input_intervals" type="data"
                format="bed,gatk_interval,picard_interval_list,vcf"
                help="-L,--intervals &amp;lt;intervals&amp;gt;"
                label="Genomic intervals"
                multiple="true">
            <key type="short">L</key>
            <key type="long">intervals</key>
         </param>
        <param name="input_exclude_intervals" type="data"
                format="bed,gatk_interval,picard_interval_list,vcf"
                help="-XL,--excludeIntervals &amp;lt;excludeIntervals&amp;gt;"
                label="Genomic intervals"
                multiple="true">
            <key type="short">XL</key>
            <key type="long">excludeIntervals</key>
         </param>
        
        <param name="interval_set_rule" type="select"
                help="-isr,--interval_set_rule &amp;lt;interval_set_rule&amp;gt;"
                label="Interval set rule">
            <key type="short">isr</key>
            <key type="long">interval_set_rule</key>
         </param>
        
        <conditional name="downsampling_type">
            <param name="downsampling_type_selector" type="select"
                   help="-dt,--downsampling_type &amp;lt;downsampling_type&amp;gt;"
                   label="Type of reads downsampling to employ at a given locus">
               <key type="short">dt</key>
               <key type="long">downsampling_type</key>
            </param>
            <when value="NONE">
              
          </when>
            <when value="ALL_READS">
              <conditional name="downsample_to_type">
                  <param name="downsample_to_type_selector" type="select" label="Downsample method"/>
                  <when value="downsample_to_fraction">
                      <param name="downsample_to_value" type="float"
                            help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;"
                            label="Fraction [0.0-1.0] of reads to downsample to">
                        <key type="short">dfrac</key>
                        <key type="long">downsample_to_fraction</key>
                     </param>
                  </when>
                  <when value="downsample_to_coverage">
                      <param name="downsample_to_value" type="integer"
                            help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;"
                            label="Coverage to downsample to at any given locus">
                        <key type="short">dcov</key>
                        <key type="long">downsample_to_coverage</key>
                     </param>
                  </when>
              </conditional>
            </when>
            <when value="BY_SAMPLE">
              <conditional name="downsample_to_type">
                  <param name="downsample_to_type_selector" type="select" label="Downsample method"/>
                  <when value="downsample_to_fraction">
                      <param name="downsample_to_value" type="float"
                            help="-dfrac,--downsample_to_fraction &amp;lt;downsample_to_fraction&amp;gt;"
                            label="Fraction [0.0-1.0] of reads to downsample to">
                        <key type="short">dfrac</key>
                        <key type="long">downsample_to_fraction</key>
                     </param>
                  </when>
                  <when value="downsample_to_coverage">
                      <param name="downsample_to_value" type="integer"
                            help="-dcov,--downsample_to_coverage &amp;lt;downsample_to_coverage&amp;gt;"
                            label="Coverage to downsample to at any given locus">
                        <key type="short">dcov</key>
                        <key type="long">downsample_to_coverage</key>
                     </param>
                  </when>
              </conditional>
            </when>
        </conditional>
        <param name="baq" type="select" help="-baq,--baq &amp;lt;baq&amp;gt;"
                label="Type of BAQ calculation to apply in the engine">
            <key type="short">baq</key>
            <key type="long">baq</key>
         </param>
        <param name="baq_gap_open_penalty" type="float"
                help="Default value is 40. 30 is perhaps better for whole genome call sets. -baqGOP,--baqGapOpenPenalty &amp;lt;baqGapOpenPenalty&amp;gt;"
                label="BAQ gap open penalty (Phred Scaled)">
            <key>Default</key>
         </param>
        <param name="use_original_qualities" type="boolean" help="-OQ,--useOriginalQualities"
                label="Use the original base quality scores from the OQ tag"
                default_value="true">
            <key type="long">useOriginalQualities</key>
            <key type="short">OQ</key>
         </param>
        <param name="default_base_qualities" type="integer"
                help="-DBQ,--defaultBaseQualities &amp;lt;defaultBaseQualities&amp;gt;"
                label="Value to be used for all base quality scores, when some are missing">
            <key type="short">DBQ</key>
            <key type="long">defaultBaseQualities</key>
         </param>
        <param name="validation_strictness" type="select"
                help="-S,--validation_strictness &amp;lt;validation_strictness&amp;gt;"
                label="How strict should we be with validation">
            <key type="short">S</key>
            <key type="long">validation_strictness</key>
         </param>
        <param name="interval_merging" type="select"
                help="-im,--interval_merging &amp;lt;interval_merging&amp;gt;"
                label="Interval merging rule">
            <key type="short">im</key>
            <key type="long">interval_merging</key>
         </param>
        
        <conditional name="read_group_black_list_type">
            <param name="read_group_black_list_type_selector" type="select"
                   help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;"
                   label="Type of reads read group black list">
               <key type="short">rgbl</key>
               <key type="long">read_group_black_list</key>
            </param>
            <when value="file">
              <param name="read_group_black_list" type="data" format="txt"
                      help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;"
                      label="Read group black list file">
                  <key type="short">rgbl</key>
                  <key type="long">read_group_black_list</key>
               </param>
            </when>
            <when value="text">
              <param name="read_group_black_list" type="text"
                      help="-rgbl,--read_group_black_list &amp;lt;read_group_black_list&amp;gt;"
                      label="Read group black list tag:string">
                  <key type="short">rgbl</key>
                  <key type="long">read_group_black_list</key>
               </param>
            </when>
          </conditional>
        
        <param name="disable_experimental_low_memory_sharding" type="boolean"
                help="--disable_experimental_low_memory_sharding"
                label="Disable experimental low-memory sharding functionality."
                default_value="true">
            <key type="long">disable_experimental_low_memory_sharding</key>
         </param>
        <param name="non_deterministic_random_seed" type="boolean"
                help="-ndrs,--nonDeterministicRandomSeed"
                label="Makes the GATK behave non deterministically, that is, the random numbers generated will be different in every run"
                default_value="true">
            <key type="long">nonDeterministicRandomSeed</key>
            <key type="short">ndrs</key>
         </param>
        <param name="fix_misencoded_quality_scores" type="boolean"
                help="-fixMisencodedQuals / --fix_misencoded_quality_scores"
                label="Fix mis-encoded base quality scores. Q0 == ASCII 33 according to the SAM specification, whereas Illumina encoding starts at Q64. The idea here is simple: we just iterate over all reads and subtract 31 from every quality score."
                default_value="true">
            <key type="long">fix_misencoded_quality_scores</key>
            <key type="short">fixMisencodedQuals</key>
         </param>
        
      </when>
    </conditional>
    
    <conditional name="analysis_param_type">
      <param name="analysis_param_type_selector" type="select"
             label="Basic or Advanced Analysis options"/>
      <when value="basic">
        
      </when>
      <when value="advanced">
        <param name="p_nonref_model" type="select"
                help="-pnrm,--p_nonref_model &amp;lt;p_nonref_model&amp;gt;"
                label="Non-reference probability calculation model to employ">
            <key type="short">pnrm</key>
            <key type="long">p_nonref_model</key>
         </param>
        <param name="heterozygosity" type="float"
                help="-hets,--heterozygosity &amp;lt;heterozygosity&amp;gt;"
                label="Heterozygosity value used to compute prior likelihoods for any locus">
            <key type="short">hets</key>
            <key type="long">heterozygosity</key>
         </param>
        <param name="pcr_error_rate" type="float"
                help="-pcr_error,--pcr_error_rate &amp;lt;pcr_error_rate&amp;gt;"
                label="The PCR error rate to be used for computing fragment-based likelihoods">
            <key type="short">pcr_error</key>
            <key type="long">pcr_error_rate</key>
         </param>
        <conditional name="genotyping_mode_type">
            <param name="genotyping_mode" type="select"
                   help="-gt_mode,--genotyping_mode &amp;lt;genotyping_mode&amp;gt;"
                   label="How to determine the alternate allele to use for genotyping">
               <key type="short">gt_mode</key>
               <key type="long">genotyping_mode</key>
            </param>
            <when value="DISCOVERY">
            
          </when>
            <when value="GENOTYPE_GIVEN_ALLELES">
               <param name="input_alleles_rod" type="data" format="vcf"
                      help="-alleles,--alleles &amp;lt;alleles&amp;gt;"
                      label="Alleles ROD file">
                  <key type="short">alleles</key>
                  <key type="long">alleles</key>
               </param>
            </when>
        </conditional>
        <param name="output_mode" type="select"
                help="-out_mode,--output_mode &amp;lt;output_mode&amp;gt;"
                label="Should we output confident genotypes (i.e. including ref calls) or just the variants?">
            <key type="short">out_mode</key>
            <key type="long">output_mode</key>
         </param>
        <param name="compute_SLOD" type="boolean" help="--computeSLOD"
                label="Compute the SLOD"
                default_value="true">
            <key type="long">computeSLOD</key>
         </param>
        <param name="min_base_quality_score" type="integer"
                help="-mbq,--min_base_quality_score &amp;lt;min_base_quality_score&amp;gt;"
                label="Minimum base quality required to consider a base for calling">
            <key type="short">mbq</key>
            <key type="long">min_base_quality_score</key>
         </param>
        <param name="max_deletion_fraction" type="float"
                help="to disable, set to &lt; 0 or &gt; 1 (-deletions,--max_deletion_fraction &amp;lt;max_deletion_fraction&amp;gt;)"
                label="Maximum fraction of reads with deletions spanning this locus for it to be callable">
            <key>to</key>
         </param>
        <param name="max_alternate_alleles" type="integer"
                help="-maxAlleles,--max_alternate_alleles &amp;lt;max_alternate_alleles&amp;gt;"
                label="Maximum number of alternate alleles to genotype">
            <key type="short">maxAlleles</key>
            <key type="long">max_alternate_alleles</key>
         </param>
        <param name="min_indel_count_for_genotyping" type="integer"
                help="-minIndelCnt,--min_indel_count_for_genotyping &amp;lt;min_indel_count_for_genotyping&amp;gt;"
                label="Minimum number of consensus indels required to trigger genotyping run">
            <key type="short">minIndelCnt</key>
            <key type="long">min_indel_count_for_genotyping</key>
         </param>
        <param name="indel_heterozygosity" type="float"
                help="1.0/8000==0.000125 (-indelHeterozygosity,--indel_heterozygosity &amp;lt;indel_heterozygosity&amp;gt;)"
                label="Heterozygosity for indel calling">
            <key>1.0/8000==0.000125</key>
         </param>
        <param name="indelGapContinuationPenalty" type="integer"
                help="--indelGapContinuationPenalty"
                label="Indel gap continuation penalty">
            <key type="long">indelGapContinuationPenalty</key>
         </param>
        <param name="indelGapOpenPenalty" type="integer" help="--indelGapOpenPenalty"
                label="Indel gap open penalty">
            <key type="long">indelGapOpenPenalty</key>
         </param>
        
        <param name="indelHaplotypeSize" type="integer" help="--indelHaplotypeSize"
                label="Indel haplotype size">
            <key type="long">indelHaplotypeSize</key>
         </param>
        <param name="doContextDependentGapPenalties" type="boolean"
                help="--doContextDependentGapPenalties"
                label="Vary gap penalties by context"
                default_value="true">
            <key type="long">doContextDependentGapPenalties</key>
         </param>
        <param name="annotation" type="select" help="-A,--annotation &amp;lt;annotation&amp;gt;"
                label="Annotation Types">
            <key type="short">A</key>
            <key type="long">annotation</key>
         </param>
        <param name="additional_annotation_name" type="text"
                help="-A,--annotation &amp;lt;annotation&amp;gt;"
                label="Annotation name"
                multiple="true">
            <key type="short">A</key>
            <key type="long">annotation</key>
         </param>

        <param name="group" type="select" help="-G,--group &amp;lt;group&amp;gt;"
                label="Annotation Interfaces/Groups">
            <key type="short">G</key>
            <key type="long">group</key>
         </param>
    
        <param name="exclude_annotations" type="select"
                help="-XA,--excludeAnnotation &amp;lt;excludeAnnotation&amp;gt;"
                label="Annotations to exclude">
            <key type="short">XA</key>
            <key type="long">excludeAnnotation</key>
         </param>
        <param name="multiallelic" type="boolean" help="--multiallelic"
                label="Allow the discovery of multiple alleles (SNPs only)"
                default_value="true">
            <key type="long">multiallelic</key>
         </param>
        <param name="sample_ploidy" type="integer"
                help="--sample_ploidy / -ploidy (default value 2 ). For pooled data, set to (Number of samples in each pool * Sample Ploidy)."
                label="Ploidy (number of chromosomes) per sample."
                optional="true">
            <key type="long">sample_ploidy</key>
         </param>
      </when>
    </conditional>
  
  
    <param name="output_vcf" type="data" format="vcf"
          label="${tool.name} on ${on_string} (VCF)"
          output="true"/>
    <param name="output_metrics" type="data" format="txt"
          label="${tool.name} on ${on_string} (metrics)"
          output="true"/>
    <param name="output_log" type="data" format="txt"
          label="${tool.name} on ${on_string} (log)"
          output="true"/>
  
    <data name="output_vcf" format="vcf" label="${tool.name} on ${on_string} (VCF)"/>
    <data name="output_metrics" format="txt"
         label="${tool.name} on ${on_string} (metrics)"/>
    <data name="output_log" format="txt" label="${tool.name} on ${on_string} (log)"/>
  
  
  
  
</tool>