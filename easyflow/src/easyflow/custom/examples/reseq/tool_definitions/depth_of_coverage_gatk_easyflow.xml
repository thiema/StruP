<?xml version="1.0" encoding="UTF-8"?>
<tool xmlns="urn:de.thiema.easyflow/types"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:de.thiema.easyflow/types Easyflow.xsd"
      id="gatk_depth_of_coverage"
      name="Depth of Coverage"
      version="0.0.2">
  <description>on BAM files</description>
  <requirements>
      <requirement type="package" version="1.4">gatk</requirement>
      <requirement type="package">samtools</requirement>
  </requirements>
  <macros>
      <import>gatk_macros_easyflow.xml</import>
  </macros>
  
  
    <conditional name="reference_source">
      <expand macro="reference_source_selector_param"/>
      <when value="cached">
        <param name="input_bam" type="data" format="bam"
                help="-I,--input_file &amp;lt;input_file&amp;gt;"
                label="BAM file"
                multiple="true"
                min_occur="1"/>
        <param name="ref_file" type="select"
                help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;"
                label="Using reference genome">
            <key type="short">R</key>
            <key type="long">reference_sequence</key>
         </param>
      </when>
      <when value="history"> 
        <param name="input_bam" type="data" format="bam"
                help="-I,--input_file &amp;lt;input_file&amp;gt;"
                label="BAM file"
                multiple="true"
                min_occur="1"/>
        <param name="ref_file" type="data" format="fasta"
                help="-R,--reference_sequence &amp;lt;reference_sequence&amp;gt;"
                label="Using reference file">
            <key type="short">R</key>
            <key type="long">reference_sequence</key>
         </param>
      </when>
    </conditional>
    
    <param name="input_calculate_coverage_over_genes" type="data" format="data"
          help="-geneList,--calculateCoverageOverGenes &amp;lt;calculateCoverageOverGenes&amp;gt;"
          label="RefSeq Rod"
          optional="true">
      <key type="short">geneList</key>
      <key type="long">calculateCoverageOverGenes</key>
   </param>
    
    <param name="partition_type" type="select"
          help="-pt,--partitionType &amp;lt;partitionType&amp;gt;"
          label="Partition type for depth of coverage">
      <key type="short">pt</key>
      <key type="long">partitionType</key>
   </param>
    
    <param name="summary_coverage_threshold" type="integer"
          help="-ct,--summaryCoverageThreshold &amp;lt;summaryCoverageThreshold&amp;gt;"
          label="for summary file outputs, report the % of bases covered to &gt;= this number"
          multiple="true"/>
    
    <param name="output_format" type="select" help="--outputFormat &amp;lt;outputFormat&amp;gt;"
          label="Output format">
      <key type="long">outputFormat</key>
   </param>
    
    <expand macro="gatk_param_type_conditional"/>
    
    <expand macro="analysis_type_conditional">
        <param name="ignore_deletion_sites" type="boolean" help="--ignoreDeletionSites"
             label="Ignore sites consisting only of deletions"
             defaultValue="true">
         <key type="long">ignoreDeletionSites</key>
      </param>
        <param name="include_deletions" type="boolean" help="-dels,--includeDeletions"
             label="Include information on deletions"
             defaultValue="true">
         <key type="long">includeDeletions</key>
         <key type="short">dels</key>
      </param>
        <param name="max_base_quality" type="integer"
             help="--maxBaseQuality &amp;lt;maxBaseQuality&amp;gt;"
             label="Maximum quality of bases to count towards depth">
         <key type="long">maxBaseQuality</key>
      </param>
        <param name="min_base_quality" type="integer"
             help="-mbq,--minBaseQuality &amp;lt;minBaseQuality&amp;gt;"
             label="Minimum quality of bases to count towards depth">
         <key type="short">mbq</key>
         <key type="long">minBaseQuality</key>
      </param>
        <param name="max_mapping_quality" type="integer"
             help="--maxMappingQuality &amp;lt;maxMappingQuality&amp;gt;"
             label="Maximum mapping quality of reads to count towards depth.">
         <key type="long">maxMappingQuality</key>
      </param>
        <param name="min_mapping_quality" type="integer"
             help="-mmq,--minMappingQuality &amp;lt;minMappingQuality&amp;gt;"
             label="Minimum mapping quality of reads to count towards depth">
         <key type="short">mmq</key>
         <key type="long">minMappingQuality</key>
      </param>
        <param name="n_bins" type="integer" help="--nBins &amp;lt;nBins&amp;gt;"
             label="Number of bins to use for granular binning">
         <key type="long">nBins</key>
      </param>
        <param name="omit_depth_output_at_each_base" type="boolean"
             help="-omitBaseOutput,--omitDepthOutputAtEachBase"
             label="Omit the output of the depth of coverage at each base"
             defaultValue="true">
         <key type="long">omitDepthOutputAtEachBase</key>
         <key type="short">omitBaseOutput</key>
      </param>
        <param name="omit_interval_statistics" type="boolean"
             help="-omitIntervals,--omitIntervalStatistics"
             label="Omit the per-interval statistics section"
             defaultValue="true">
         <key type="long">omitIntervalStatistics</key>
         <key type="short">omitIntervals</key>
      </param>
        <param name="omit_locus_table" type="boolean" help="-omitLocusTable,--omitLocusTable"
             label="Do not calculate the per-sample per-depth counts of loci"
             defaultValue="true">
         <key type="long">omitLocusTable</key>
         <key type="short">omitLocusTable</key>
      </param>
        <param name="omit_per_sample_stats" type="boolean"
             help="-omitSampleSummary,--omitPerSampleStats"
             label="Omit the summary files per-sample."
             defaultValue="true">
         <key type="long">omitPerSampleStats</key>
         <key type="short">omitSampleSummary</key>
      </param>
        <param name="print_base_counts" type="boolean" help="-baseCounts,--printBaseCounts"
             label="Add base counts to per-locus output"
             defaultValue="true">
         <key type="long">printBaseCounts</key>
         <key type="short">baseCounts</key>
      </param>
        <param name="print_bin_endpoints_and_exit" type="boolean"
             help="--printBinEndpointsAndExit"
             label="Print the bin values and exits immediately"
             defaultValue="true">
         <key type="long">printBinEndpointsAndExit</key>
      </param>
        <param name="start" type="integer" help="--start &amp;lt;start&amp;gt;"
             label="Starting (left endpoint) for granular binning">
         <key type="long">start</key>
      </param>
        <param name="stop" type="integer" help="--stop &amp;lt;stop&amp;gt;"
             label="Ending (right endpoint) for granular binning">
         <key type="long">stop</key>
      </param>
    </expand>
  
  
    <param name="output_per_locus_coverage" type="data" format="tabular"
          label="${tool.name} on ${on_string} (per locus coverage)"
          output="true"/>
    <param name="output_summary_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output summary sample)"
          output="true"/>
    <param name="output_statistics_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output statistics sample)"
          output="true"/>
    <param name="output_interval_summary_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output interval summary sample)"
          output="true"/>
    <param name="output_interval_statistics_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output interval statistics sample)"
          output="true"/>
    <param name="output_gene_summary_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output gene summary sample)"
          output="true"/>
    <param name="output_gene_statistics_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output gene statistics sample)"
          output="true"/>
    <param name="output_cumulative_coverage_counts_sample" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output cumulative coverage counts sample)"
          output="true"/>
    <param name="output_cumulative_coverage_proportions_sample" type="data"
          format="tabular"
          label="${tool.name} on ${on_string} (output cumulative coverage proportions sample)"
          output="true"/>
    
    <param name="output_summary_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output summary readgroup)"
          output="true"/>
    <param name="output_statistics_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output statistics readgroup)"
          output="true"/>
    <param name="output_interval_summary_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output interval summary readgroup)"
          output="true"/>
    <param name="output_interval_statistics_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output interval statistics readgroup)"
          output="true"/>
    <param name="output_gene_summary_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output gene summary readgroup)"
          output="true"/>
    <param name="output_gene_statistics_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output gene statistics readgroup)"
          output="true"/>
    <param name="output_cumulative_coverage_counts_readgroup" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output cumulative coverage counts readgroup)"
          output="true"/>
    <param name="output_cumulative_coverage_proportions_readgroup" type="data"
          format="tabular"
          label="${tool.name} on ${on_string} (output cumulative coverage proportions readgroup)"
          output="true"/>
    
    <param name="output_summary_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output summary library)"
          output="true"/>
    <param name="output_statistics_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output statistics library)"
          output="true"/>
    <param name="output_interval_summary_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output interval summary library)"
          output="true"/>
    <param name="output_interval_statistics_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output interval statistics library)"
          output="true"/>
    <param name="output_gene_summary_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output gene summary library)"
          output="true"/>
    <param name="output_gene_statistics_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output gene statistics library)"
          output="true"/>
    <param name="output_cumulative_coverage_counts_library" type="data" format="tabular"
          label="${tool.name} on ${on_string} (output cumulative coverage counts library)"
          output="true"/>
    <param name="output_cumulative_coverage_proportions_library" type="data"
          format="tabular"
          label="${tool.name} on ${on_string} (output cumulative coverage proportions library)"
          output="true"/>
    
    <param name="output_log" type="data" format="tabular"
          label="${tool.name} on ${on_string} (log)"
          output="true"/>
  
    <data name="output_per_locus_coverage" format="tabular"
         label="${tool.name} on ${on_string} (per locus coverage)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_summary_sample" format="tabular"
         label="${tool.name} on ${on_string} (output summary sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_per_sample_stats'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'sample' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_statistics_sample" format="tabular"
         label="${tool.name} on ${on_string} (output statistics sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_per_sample_stats'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'sample' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_interval_summary_sample" format="tabular"
         label="${tool.name} on ${on_string} (output interval summary sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'sample' in partition_type or not partition_type</filter>
        <filter>gatk_param_type['gatk_param_type_selector'] == "advanced" and len( gatk_param_type['input_interval_repeat'] )</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_interval_statistics'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_interval_statistics_sample" format="tabular"
         label="${tool.name} on ${on_string} (output interval statistics sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'sample' in partition_type or not partition_type</filter>
        <filter>gatk_param_type['gatk_param_type_selector'] == "advanced" and len( gatk_param_type['input_interval_repeat'] )</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_interval_statistics'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_gene_summary_sample" format="tabular"
         label="${tool.name} on ${on_string} (output gene summary sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>input_calculate_coverage_over_genes is not None and 'sample' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_gene_statistics_sample" format="tabular"
         label="${tool.name} on ${on_string} (output gene statistics sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>input_calculate_coverage_over_genes is not None and 'sample' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_cumulative_coverage_counts_sample" format="tabular"
         label="${tool.name} on ${on_string} (output cumulative coverage counts sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_depth_output_at_each_base'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'sample' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_cumulative_coverage_proportions_sample" format="tabular"
         label="${tool.name} on ${on_string} (output cumulative coverage proportions sample)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_depth_output_at_each_base'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'sample' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    
    <data name="output_summary_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output summary readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_per_sample_stats'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'readgroup' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_statistics_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output statistics readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_per_sample_stats'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'readgroup' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_interval_summary_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output interval summary readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'readgroup' in partition_type</filter>
        <filter>gatk_param_type['gatk_param_type_selector'] == "advanced" and len( gatk_param_type['input_interval_repeat'] )</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_interval_statistics'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_interval_statistics_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output interval statistics readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'readgroup' in partition_type</filter>
        <filter>gatk_param_type['gatk_param_type_selector'] == "advanced" and len( gatk_param_type['input_interval_repeat'] )</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_interval_statistics'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_gene_summary_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output gene summary readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>input_calculate_coverage_over_genes is not None and 'readgroup' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_gene_statistics_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output gene statistics readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>input_calculate_coverage_over_genes is not None and 'readgroup' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_cumulative_coverage_counts_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output cumulative coverage counts readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_depth_output_at_each_base'] == False</filter>
        <filter>'readgroup' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_cumulative_coverage_proportions_readgroup" format="tabular"
         label="${tool.name} on ${on_string} (output cumulative coverage proportions readgroup)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_depth_output_at_each_base'] == False</filter>
        <filter>'readgroup' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    
    <data name="output_summary_library" format="tabular"
         label="${tool.name} on ${on_string} (output summary library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_per_sample_stats'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'library' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_statistics_library" format="tabular"
         label="${tool.name} on ${on_string} (output statistics library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_per_sample_stats'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'library' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_interval_summary_library" format="tabular"
         label="${tool.name} on ${on_string} (output interval summary library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'library' in partition_type</filter>
        <filter>gatk_param_type['gatk_param_type_selector'] == "advanced" and len( gatk_param_type['input_interval_repeat'] )</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_interval_statistics'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_interval_statistics_library" format="tabular"
         label="${tool.name} on ${on_string} (output interval statistics library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'library' in partition_type</filter>
        <filter>gatk_param_type['gatk_param_type_selector'] == "advanced" and len( gatk_param_type['input_interval_repeat'] )</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_interval_statistics'] == False</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_gene_summary_library" format="tabular"
         label="${tool.name} on ${on_string} (output gene summary library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>input_calculate_coverage_over_genes is not None and 'library' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_gene_statistics_library" format="tabular"
         label="${tool.name} on ${on_string} (output gene statistics library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>input_calculate_coverage_over_genes is not None and 'library' in partition_type or not partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_cumulative_coverage_counts_library" format="tabular"
         label="${tool.name} on ${on_string} (output cumulative coverage counts library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_depth_output_at_each_base'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'library' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    <data name="output_cumulative_coverage_proportions_library" format="tabular"
         label="${tool.name} on ${on_string} (output cumulative coverage proportions library)">
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['omit_depth_output_at_each_base'] == False</filter>
        <filter>analysis_param_type['analysis_param_type_selector'] == "basic" or analysis_param_type['print_bin_endpoints_and_exit'] == False</filter>
        <filter>'library' in partition_type</filter>
        <actions>
            <conditional name="output_format">
                <when value="rtable">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
                <when value="csv">
                    <action type="format">
                        <option type="from_param" name="output_format"/>
                    </action>
                </when>
            </conditional>
        </actions>
    </data>
    
    <data name="output_log" format="tabular" label="${tool.name} on ${on_string} (log)"/>
  
  
  
  
</tool>