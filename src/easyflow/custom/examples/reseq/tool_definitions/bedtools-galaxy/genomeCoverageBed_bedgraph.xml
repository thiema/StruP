<?xml version="1.0" encoding="UTF-8"?>
<tool xmlns="urn:de.thiema.easyflow/types"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="urn:de.thiema.easyflow/types Easyflow.xsd"
      id="bedtools_genomecoveragebed_bedgraph"
      name="Create a BedGraph of genome coverage"
      version="0.1.0">

    <requirements>
        <requirement type="binary">genomeCoverageBed</requirement>
    </requirements>

    

    
        <param name="input" type="data" format="bed,bam"
          label="The BAM or BED file from which coverage should be computed"/>

        <param name="zero_regions" type="boolean"
          help="If set, regions without any coverage will also be reported."
          label="Report regions with zero coverage"
          defaultValue="true">
      <key type="short">bga</key>
      <key>If</key>
   </param>

        <param name="split" type="boolean"
          help="If set, the coverage will be calculated based the spliced intervals only. For BAM files, this inspects the CIGAR N operation to infer the blocks for computing coverage. For BED12 files, this inspects the BlockCount, BlockStarts, and BlockEnds fields (i.e., columns 10,11,12). If this option is not set, coverage will be calculated based on the interval's START/END coordinates, and would include introns in the case of RNAseq data."
          label="Treat split/spliced BAM or BED12 entries as distinct BED intervals when computing coverage."
          defaultValue="true">
      <key type="short">split</key>
      <key>If</key>
   </param>

        <param name="strand" type="select" label="Calculate coverage based on"/>

        <param name="scale" type="text"
          help="Each BEDGRAPH coverage value is multiplied by this factor before being reported. Useful for normalizing coverage by, e.g., reads per million (RPM)"
          label="Scale the coverage by a constant factor"
          optional="true">
      <key>Each</key>
   </param>
    

    
        <param name="output" type="data" format="bedgraph"
          label="${input.name} (Genome Coverage BedGraph)"
          output="true"/>
    
        <data name="output" format="bedgraph"
         label="${input.name} (Genome Coverage BedGraph)"
         metadata_source="input"/>
    
    
</tool>